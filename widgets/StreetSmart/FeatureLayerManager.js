function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}define(['dojo/on','dojo/dom','esri/request','esri/geometry/Point','esri/geometry/Polygon','esri/geometry/ScreenPoint','esri/SpatialReference','./utils'],function(on,dom,esriRequest,Point,Polygon,ScreenPoint,SpatialReference,utils){'use strict';return function(){function FeatureLayerManager(_ref){var map=_ref.map,wkid=_ref.wkid,StreetSmartApi=_ref.StreetSmartApi,widget=_ref.widget;_classCallCheck(this,FeatureLayerManager);this.widget=widget;this.map=map;this.wkid=wkid;this.StreetSmartApi=StreetSmartApi}FeatureLayerManager.prototype._saveMeasurementsToLayer=function _saveMeasurementsToLayer(layer,measurementEvent,editID){console.log(layer,measurementEvent);//this.layerUrl = layer.url;
var geometryType=measurementEvent.features[0].geometry.type;switch(geometryType){case'Point':return this.pointLayer(layer,measurementEvent,editID);case'LineString':return this.lineLayer(layer,measurementEvent,editID);case'Polygon':return this.polygonLayer(layer,measurementEvent,editID);}return Promise.resolve(null)};FeatureLayerManager.prototype._transformPoints=function _transformPoints(coords,layerWkid,latestWkid){var _this=this;return coords.map(function(coord){// Ignore incomplete forward intersection:
if(_.includes(coord,null)){return null}var pointViewer=new Point(coord[0],coord[1],new SpatialReference({wkid:_this.wkid}));var coordMap=utils.transformProj4js(pointViewer,layerWkid,latestWkid);return[coordMap.x,coordMap.y,coord[2]]})};FeatureLayerManager.prototype.pointLayer=function pointLayer(layer,measurement,editID){var _attributes;var coords=measurement.features[0].geometry.coordinates;if(coords===null){return}var zValue=coords[2];//GC: allowing both SRS of the layer to match up with the SRS of the widget
var latestWkid=layer.spatialReference.latestWkid;var layerWkid=layer.spatialReference.wkid;var transformedCoords=this._transformPoints([coords],layerWkid,latestWkid);var pointJson=[{'geometry':{'x':transformedCoords[0][0],'y':transformedCoords[0][1],'z':zValue,'spatialReference':{'wkid':layerWkid}},'attributes':(_attributes={},_attributes[layer.objectIdField]=editID,_attributes)}];if(editID){pointJson[0].attributes[layer.objectIdField]=editID}return this._saveToFeatureLayer(layer,pointJson,editID)};FeatureLayerManager.prototype.lineLayer=function lineLayer(layer,measurement,editID){var coords=measurement.features[0].geometry.coordinates;var derivedData=measurement.features[0].properties.derivedData;var measuredDistance=derivedData.segmentLengths.value[0].toFixed(2)+derivedData.unit;if(coords===null){return}//GC: allowing both SRS of the layer to match up with the SRS of the widget
var latestWkid=layer.spatialReference.latestWkid;var layerWkid=layer.spatialReference.wkid;var transformedCoords=this._transformPoints(coords,layerWkid,latestWkid);var lineJson=[{'geometry':{'hasZ':true,'paths':[transformedCoords],'spatialReference':{'wkid':layerWkid}},'attributes':{Measurement:measuredDistance}}];if(editID){lineJson[0].attributes[layer.objectIdField]=editID}return this._saveToFeatureLayer(layer,lineJson,editID)};FeatureLayerManager.prototype.polygonLayer=function polygonLayer(layer,measurement,editID){var coords=measurement.features[0].geometry.coordinates[0];var derivedData=measurement.features[0].properties.derivedData;var polygonArea=_.get(derivedData,'area.value',0).toFixed(2)+derivedData.unit;if(coords===null){return}//GC: allowing both SRS of the layer to match up with the SRS of the widget
var latestWkid=layer.spatialReference.latestWkid;var layerWkid=layer.spatialReference.wkid;var transformedCoords=this._transformPoints(coords,layerWkid,latestWkid);var polyJson=[{'geometry':{'hasZ':true,'rings':[transformedCoords],'spatialReference':{'wkid':layerWkid}},'attributes':{Measurement:polygonArea}}];if(editID){polyJson[0].attributes[layer.objectIdField]=editID}return this._saveToFeatureLayer(layer,polyJson,editID)};FeatureLayerManager.prototype._saveToFeatureLayer=function _saveToFeatureLayer(layer,geomJson,editID){var options={url:layer.url+'/applyEdits',content:{f:'json'},handleAs:'json'};if(!editID){options.content.adds=JSON.stringify(geomJson)}else{options.content.updates=JSON.stringify(geomJson)}var layerSaveRequest=esriRequest(options,{usePost:true});return layerSaveRequest.then(function(response){layer.refresh();console.log('success'+JSON.stringify(response));return response},function(error){console.log('error'+error)})};return FeatureLayerManager}()});