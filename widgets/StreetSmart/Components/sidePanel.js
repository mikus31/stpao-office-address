function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}define(['react','./MeasurementSidePanel'],function(React,MeasPanel){return function(_React$Component){_inherits(SidePanel,_React$Component);function SidePanel(){_classCallCheck(this,SidePanel);return _possibleConstructorReturn(this,_React$Component.call(this))}SidePanel.prototype.render=function render(){return React.createElement(MeasPanel,{widget:this.props.widget,togglePanel:this.props.togglePanel,selectLayer:this.props.selectLayer,selectGeometryType:this.props.selectGeometryType})};return SidePanel}(React.Component)});